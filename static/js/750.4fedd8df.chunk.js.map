{"version":3,"file":"static/js/750.4fedd8df.chunk.js","mappings":"8JAEaA,EAAc,SAACC,GAC1B,IAAMC,GAAeC,EAAAA,EAAAA,QAAO,MAC5B,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAU,CACdC,KAAM,KACNC,WAAY,MACZR,UAAWA,GAAa,KAkB1B,OAfAS,EAAAA,EAAAA,YAAU,WACR,IAMMC,EAAW,IAAIC,sBANM,SAACC,GAC1B,IAAOC,GAAP,OAAgBD,EAAhB,MACuBC,EAAMC,iBACNV,GAAWC,EAAaQ,EAAMC,eACtD,GAE6DR,GAG9D,OAFIL,EAAac,SAASL,EAASM,QAAQf,EAAac,SAEjD,WACDd,EAAac,SAASL,EAASO,UAAUhB,EAAac,QAC3D,CACF,GAAE,CAACd,EAAcK,EAASF,IAEpB,CAAEH,aAAAA,EAAcG,UAAAA,EACxB,C,yFCZD,EAbe,SAAC,GAAwD,IAAtDc,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACzD,OACE,mBACEC,QAASL,EACTE,UAAWA,EACX,eAAcC,EACd,aAAYC,EAJd,SAMGH,GAGN,C,qJCwCD,EA5Ca,WACX,IAAMK,GAAWC,EAAAA,EAAAA,MACjB,GAAoC1B,EAAAA,EAAAA,KAA5BE,EAAR,EAAQA,aAAcG,EAAtB,EAAsBA,UAMtB,OACE,0BACE,oBACEgB,UAAS,gCAA2BhB,EAAY,cAAgB,IAChE,aAAW,OACXsB,IAAKzB,EAHP,UAKE,iBAAKmB,UAAU,wBAAf,WACG,SAAC,KAAD,CAAMO,GAAG,IAAIP,UAAU,aAAvB,UACH,SAAC,IAAD,OAEE,SAACQ,EAAA,QAAD,CACEC,IAAI,KACJV,KAAM,CACJ,mBACA,iBACEC,UAAU,2CADZ,4BAEM,4BAIN,yBAEFA,UAAU,mBAEZ,SAACU,EAAA,QAAD,CACEZ,YA9BU,WAClBM,EAAS,QACV,EA6BSL,MAAM,6CACNC,UAAU,2BAMrB,C","sources":["app/hooks.js","components/Button.js","pages/homepage/components/Hero.js"],"sourcesContent":["import { useRef, useState, useEffect } from 'react';\n\nexport const useObserver = (threshold) => {\n  const containerRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const options = {\n    root: null,\n    rootMargin: '0px',\n    threshold: threshold || 0.35,\n  };\n\n  useEffect(() => {\n    const handleIntersection = (entries) => {\n      const [entry] = entries;\n      const isIntersecting = entry.isIntersecting;\n      if (isIntersecting && !isVisible) setIsVisible(entry.isIntersecting);\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, options);\n    if (containerRef.current) observer.observe(containerRef.current);\n\n    return () => {\n      if (containerRef.current) observer.unobserve(containerRef.current);\n    };\n  }, [containerRef, options, isVisible]);\n\n  return { containerRef, isVisible };\n};\n","import React from 'react';\nimport '../assets/styles/components/Button.css';\n\nconst Button = ({ handleClick, text, className, productId, count }) => {\n  return (\n    <button\n      onClick={handleClick}\n      className={className}\n      data-product={productId}\n      data-count={count}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useObserver } from '../../../app/hooks';\nimport Text from '../../../components/Text';\nimport Button from '../../../components/Button';\nimport '../../../assets/styles/homepage/Hero.css';\nimport { Link } from 'react-router-dom';\nimport { ReactComponent as LogoSVG } from '../../../assets/images/logo.svg';\nimport '../../../assets/styles/homepage/Logo.css'\n\nconst Hero = () => {\n  const navigate = useNavigate();\n  const { containerRef, isVisible } = useObserver();\n\n  const handleClick = () => {\n    navigate('/shop');\n  };\n\n  return (\n    <div>\n      <section\n        className={`hero enter-transition ${isVisible ? 'in-viewport' : ''}`}\n        aria-label=\"Hero\"\n        ref={containerRef}\n      >\n        <div className=\"content hero__content\">\n           <Link to=\"/\" className=\"logo__home\">\n        <LogoSVG />\n      </Link>    \n          <Text\n            tag=\"h2\"\n            text={[\n              \"The Best       \",\n              <span\n                className=\"text--highlighted hero-text--highlighted\"\n                key=\"hero-heading-highlighted\"\n              >\n                    Project Selling\n              </span>,\n              ' website in the World',\n            ]}\n            className=\"hero__heading\"\n          />\n          <Button\n            handleClick={handleClick}\n            text={<span>Projects store</span>}\n            className=\"btn btn--primary\"\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Hero;\n"],"names":["useObserver","threshold","containerRef","useRef","useState","isVisible","setIsVisible","options","root","rootMargin","useEffect","observer","IntersectionObserver","entries","entry","isIntersecting","current","observe","unobserve","handleClick","text","className","productId","count","onClick","navigate","useNavigate","ref","to","Text","tag","Button"],"sourceRoot":""}